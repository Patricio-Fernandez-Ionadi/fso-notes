{"version":3,"sources":["components/Note.jsx","components/Notification.jsx","components/Toggable.jsx","components/LoginForm.jsx","components/NoteForm.jsx","services/notes.js","services/login.js","App.jsx","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Toggable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","LoginForm","logUser","username","setUsername","password","setPassword","onSubmit","e","preventDefault","type","value","name","placeholder","onChange","target","id","NoteForm","addNote","handleLogOut","newNote","setNewNote","toggableRef","useRef","current","baseUrl","token","axios","get","then","response","data","newObject","config","headers","Authorization","post","put","newToken","login","credentials","a","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","notesToShow","filter","noteObject","returnedNote","concat","removeItem","map","i","find","n","changedNote","console","log","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fd91804.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important ? \"make not important\" : \"make important\"\r\n\r\n\treturn (\r\n\t\t<li className='note'>\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Note\r\n","const Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn <div className='error'>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import { forwardRef, useImperativeHandle, useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Toggable = forwardRef(({ children, buttonLabel = \"Button\" }, ref) => {\r\n\tconst [visible, setVisible] = useState(false)\r\n\r\n\tconst hideWhenVisible = { display: visible ? \"none\" : \"inherit\" }\r\n\tconst showWhenVisible = { display: visible ? \"inherit\" : \"none\" }\r\n\r\n\tconst toggleVisibility = () => setVisible(!visible)\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\t\ttoggleVisibility,\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={hideWhenVisible}>\r\n\t\t\t\t<button onClick={toggleVisibility}>{buttonLabel}</button>\r\n\t\t\t</div>\r\n\t\t\t<div style={showWhenVisible}>\r\n\t\t\t\t{children}\r\n\t\t\t\t<button onClick={toggleVisibility}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\nToggable.displayName = \"Toggable\"\r\n\r\nToggable.propTypes = {\r\n\tbuttonLabel: PropTypes.string,\r\n}\r\n\r\nexport default Toggable\r\n","import { useState } from \"react\"\r\nimport Toggable from \"./Toggable\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst LoginForm = ({ logUser }) => {\r\n\tconst [username, setUsername] = useState(\"\")\r\n\tconst [password, setPassword] = useState(\"\")\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlogUser({ username, password })\r\n\t\tsetUsername(\"\")\r\n\t\tsetPassword(\"\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Toggable buttonLabel='Show Login'>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\tplaceholder='Username'\r\n\t\t\t\t\t\tonChange={({ target }) => setUsername(target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\tonChange={({ target }) => setPassword(target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button id='form-login-button'>Login</button>\r\n\t\t\t</form>\r\n\t\t</Toggable>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\tlogUser: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default LoginForm\r\n","import { useRef, useState } from \"react\"\r\nimport Toggable from \"./Toggable\"\r\n\r\nconst NoteForm = ({ addNote, handleLogOut }) => {\r\n\tconst [newNote, setNewNote] = useState(\"\")\r\n\tconst toggableRef = useRef()\r\n\r\n\tconst handleChange = ({ target }) => {\r\n\t\tsetNewNote(target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\timportant: false,\r\n\t\t}\r\n\r\n\t\taddNote(noteObject)\r\n\t\tsetNewNote(\"\")\r\n\t\ttoggableRef.current.toggleVisibility()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Toggable buttonLabel='New Note' ref={toggableRef}>\r\n\t\t\t<h3>Create a new note</h3>\r\n\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={newNote}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tplaceholder='Write your own note'\r\n\t\t\t\t/>\r\n\t\t\t\t<button type='submit'>save</button>\r\n\t\t\t</form>\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={handleLogOut}>Logout</button>\r\n\t\t\t</div>\r\n\t\t</Toggable>\r\n\t)\r\n}\r\n\r\nexport default NoteForm\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/notes\"\r\n\r\nlet token = null\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: token,\r\n\t\t},\r\n\t}\r\n\tconst request = axios.post(baseUrl, newObject, config)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\tAuthorization: token,\r\n\t\t},\r\n\t}\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject, config)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken }\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async (credentials) => {\r\n\tconst { data } = await axios.post(baseUrl, credentials)\r\n\r\n\treturn data\r\n}\r\nexport default { login }\r\n","import React, { useState, useEffect } from \"react\"\n\nimport Note from \"./components/Note\"\nimport Notification from \"./components/Notification\"\nimport LoginForm from \"./components/LoginForm\"\nimport NoteForm from \"./components/NoteForm\"\n\nimport noteService from \"./services/notes\"\nimport loginService from \"./services/login\"\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([])\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tconst [user, setUser] = useState(null)\n\n\tuseEffect(() => {\n\t\tnoteService.getAll().then((initialNotes) => {\n\t\t\tsetNotes(initialNotes)\n\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem(\"loggedNoteAppUser\")\n\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\tnoteService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\tconst addNote = (noteObject) => {\n\t\tnoteService.create(noteObject).then((returnedNote) => {\n\t\t\tsetNotes(notes.concat(returnedNote))\n\t\t})\n\t}\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find((n) => n.id === id)\n\t\tconst changedNote = { ...note, important: !note.important }\n\t\tconsole.log(note)\n\t\tconsole.log(changedNote)\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then((returnedNote) => {\n\t\t\t\tsetNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 5000)\n\t\t\t})\n\t}\n\n\tconst logUser = async ({ username, password }) => {\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t})\n\n\t\t\twindow.localStorage.setItem(\"loggedNoteAppUser\", JSON.stringify(user))\n\n\t\t\tnoteService.setToken(user.token)\n\n\t\t\tsetUser(user)\n\t\t} catch (e) {\n\t\t\tsetErrorMessage(\"Wrong credentials\")\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\t}\n\n\tconst handleLogOut = () => {\n\t\tsetUser(null)\n\t\tnoteService.setToken(null)\n\t\twindow.localStorage.removeItem(\"loggedNoteAppUser\")\n\t}\n\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\n\t\t\t<Notification message={errorMessage} />\n\t\t\t{user ? (\n\t\t\t\t<NoteForm addNote={addNote} handleLogOut={handleLogOut} />\n\t\t\t) : (\n\t\t\t\t<LoginForm logUser={logUser} />\n\t\t\t)}\n\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? \"important\" : \"all\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map((note, i) => (\n\t\t\t\t\t<Note\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tnote={note}\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport default App\n\n/* import { useEffect, useState } from \"react\"\nimport \"./App.css\"\nimport { Note } from \"./Note\"\nimport { create as createNote, getAll as getAllNotes } from \"./services/notes\"\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([])\n\tconst [newNote, setNewNote] = useState(\"\")\n\tconst [loading, setLoading] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetLoading(true)\n\t\tgetAllNotes().then((res) => {\n\t\t\tsetNotes(res)\n\t\t\tsetLoading(false)\n\t\t})\n\t}, [])\n\n\tconst handleChange = (e) => {\n\t\tsetNewNote(e.target.value)\n\t}\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\n\t\tconst noteToAddToState = {\n\t\t\ttitle: newNote,\n\t\t\tbody: newNote,\n\t\t\tuserId: 1,\n\t\t}\n\n\t\tcreateNote(noteToAddToState).then((newNote) => {\n\t\t\tsetNotes((prevNotes) => prevNotes.concat(newNote))\n\t\t})\n\n\t\tsetNewNote(\"\")\n\t\t// setNotes(notes.concat(noteToAddToState))\n\t\t// setNotes([...notes, noteToAddToState])\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t{loading ? (\n\t\t\t\t\"LOADING...\"\n\t\t\t) : (\n\t\t\t\t<ol>\n\t\t\t\t\t{notes.map((note) => (\n\t\t\t\t\t\t<Note key={note.id} {...note} />\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t)}\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input type='text' onChange={handleChange} value={newNote} />\n\t\t\t\t<button>Crear nota</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App */\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}